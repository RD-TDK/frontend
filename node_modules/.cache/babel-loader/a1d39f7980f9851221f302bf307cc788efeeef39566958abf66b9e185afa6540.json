{"ast":null,"code":"var _jsxFileName = \"D:\\\\research\\\\frontend\\\\front-side\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nconst UserContextProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState({\n    id: null,\n    gender: null,\n    isAuthenticated: false\n  });\n\n  // 可选：启动时校验本地登录状态\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedId = localStorage.getItem('userId');\n      const storedGender = localStorage.getItem('gender');\n      if (storedId && storedGender) {\n        try {\n          const response = await fetch('/api/user/login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: storedId,\n              gender: storedGender\n            })\n          });\n          if (response.ok) {\n            const u = await response.json();\n            setUser({\n              ...u,\n              isAuthenticated: true\n            });\n          } else {\n            // 本地缓存失效，清理\n            localStorage.removeItem('userId');\n            localStorage.removeItem('gender');\n          }\n        } catch (err) {\n          console.error('Auth check failed:', err);\n        }\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async userData => {\n    try {\n      const response = await fetch('/api/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: userData.id,\n          gender: userData.gender\n        })\n      });\n      if (!response.ok) {\n        alert('Login failed. Please check your user ID and gender.');\n        return false;\n      }\n      const u = await response.json();\n      setUser({\n        ...u,\n        isAuthenticated: true\n      });\n      localStorage.setItem('userId', u.id);\n      localStorage.setItem('gender', u.gender);\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Network or server error, login failed.');\n      return false;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await fetch('/api/user/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: userData.id,\n          gender: userData.gender\n        })\n      });\n      if (!response.ok) {\n        alert('Registration failed. Please check your user ID and gender.');\n        return false;\n      }\n      const u = await response.json();\n      setUser({\n        ...u,\n        isAuthenticated: true\n      });\n      localStorage.setItem('userId', u.id);\n      localStorage.setItem('gender', u.gender);\n      return true;\n    } catch (error) {\n      console.error('Register error:', error);\n      alert('Network or server error, registration failed.');\n      return false;\n    }\n  };\n  const logout = () => {\n    setUser({\n      id: null,\n      gender: null,\n      isAuthenticated: false\n    });\n    localStorage.removeItem('userId');\n    localStorage.removeItem('gender');\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(UserContextProvider, \"ojlG1sccMcL6qTO/8VwDk6Ir++A=\");\n_c = UserContextProvider;\nexport default UserContextProvider;\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserContextProvider","children","_s","user","setUser","id","gender","isAuthenticated","checkAuth","storedId","localStorage","getItem","storedGender","response","fetch","method","headers","body","JSON","stringify","ok","u","json","removeItem","err","console","error","login","userData","alert","setItem","register","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/research/frontend/front-side/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = ({ children }) => {\r\n    const [user, setUser] = useState({\r\n        id: null,\r\n        gender: null,\r\n        isAuthenticated: false\r\n    });\r\n\r\n    // 可选：启动时校验本地登录状态\r\n    useEffect(() => {\r\n        const checkAuth = async () => {\r\n            const storedId = localStorage.getItem('userId');\r\n            const storedGender = localStorage.getItem('gender');\r\n            if (storedId && storedGender) {\r\n                try {\r\n                    const response = await fetch('/api/user/login', {\r\n                        method: 'POST',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ id: storedId, gender: storedGender }),\r\n                    });\r\n                    if (response.ok) {\r\n                        const u = await response.json();\r\n                        setUser({ ...u, isAuthenticated: true });\r\n                    } else {\r\n                        // 本地缓存失效，清理\r\n                        localStorage.removeItem('userId');\r\n                        localStorage.removeItem('gender');\r\n                    }\r\n                } catch (err) {\r\n                    console.error('Auth check failed:', err);\r\n                }\r\n            }\r\n        };\r\n        checkAuth();\r\n    }, []);\r\n\r\n    const login = async (userData) => {\r\n        try {\r\n            const response = await fetch('/api/user/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    id: userData.id,\r\n                    gender: userData.gender\r\n                }),\r\n            });\r\n            if (!response.ok) {\r\n                alert('Login failed. Please check your user ID and gender.');\r\n                return false;\r\n            }\r\n            const u = await response.json();\r\n            setUser({ ...u, isAuthenticated: true });\r\n            localStorage.setItem('userId', u.id);\r\n            localStorage.setItem('gender', u.gender);\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            alert('Network or server error, login failed.');\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            const response = await fetch('/api/user/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    id: userData.id,\r\n                    gender: userData.gender\r\n                }),\r\n            });\r\n            if (!response.ok) {\r\n                alert('Registration failed. Please check your user ID and gender.');\r\n                return false;\r\n            }\r\n            const u = await response.json();\r\n            setUser({ ...u, isAuthenticated: true });\r\n            localStorage.setItem('userId', u.id);\r\n            localStorage.setItem('gender', u.gender);\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Register error:', error);\r\n            alert('Network or server error, registration failed.');\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser({ id: null, gender: null, isAuthenticated: false });\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('gender');\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, login, register, logout }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nexport default UserContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}